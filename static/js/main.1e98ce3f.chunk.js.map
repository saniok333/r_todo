{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","setState","target","value","props","type","placeholder","onChange","this","Component","TodoListItem","label","onDeleted2","onToggleImportant2","onToggleDone2","important","classNames","onClick","TodoList","todos","onDeleted1","onToggleImportant1","onToggleDone1","elements","map","item","id","itemProps","ItemStatusFilter","buttons","name","filter","onFilterChange","tagButtons","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem1","idArg","el","addItem","text","newItem","toggleImportant1","toggleProperty","toggleDone1","trm","flt","arr","propName","tData","toLowerCase","includes","items","visibleItems","search","doneCount","length","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e98ce3f.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\n\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n   return (\r\n      <div className=\"app-header d-flex\">\r\n         <h1>My Todo List</h1>\r\n         <h2>{toDo} more to do, {done} done</h2>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css'\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n   state = {\r\n      term: ''\r\n   }\r\n\r\n   onSearchChange = (e) => {\r\n      this.setState({\r\n         term: e.target.value\r\n      });\r\n      this.props.onSearchChange(e.target.value)\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <input type=\"text\"\r\n            className=\"form-control search-input\"\r\n            placeholder=\"type to search\"\r\n            onChange={this.onSearchChange}\r\n            value={this.state.term} />\r\n      )\r\n   }\r\n\r\n}\r\n\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","// import React from 'react';\r\nimport React, { Component } from 'react';\r\n\r\nimport './todo-list-item.css'\r\n\r\n// const TodoListItem = ({ label, important = false }) => {\r\n//    const style = {\r\n//       color: important ? 'steelblue' : 'black',\r\n//       fontWeight: important ? 'bold' : 'normal'\r\n//    };\r\n//    return (\r\n//       <span className=\"todo-list-item\">\r\n//          <span\r\n//             className=\"todo-list-item-label\"\r\n//             style={style}>\r\n//             {label}\r\n//          </span>\r\n\r\n//          <button type=\"button\"\r\n//             className=\"btn btn-outline-success btn-sm float-right\">\r\n//             <i className=\"fa fa-exclamation\" />\r\n//          </button>\r\n\r\n//          <button type=\"button\"\r\n//             className=\"btn btn-outline-danger btn-sm float-right\">\r\n//             <i className=\"fa fa-trash-o\" />\r\n//          </button>\r\n//       </span>\r\n//    )\r\n// };\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n   render() {\r\n\r\n      const { label, onDeleted2, onToggleImportant2, onToggleDone2, important, done } = this.props;\r\n\r\n      let classNames = 'todo-list-item';\r\n      if (done) {\r\n         classNames += ' done';\r\n      }\r\n      if (important) {\r\n         classNames += ' important';\r\n      }\r\n\r\n      return (\r\n         <span className={classNames}>\r\n            <span\r\n               className=\"todo-list-item-label\"\r\n               onClick={onToggleDone2}>\r\n               {label}\r\n            </span>\r\n\r\n            <button type=\"button\"\r\n               className=\"btn btn-outline-success btn-sm float-right\"\r\n               onClick={onToggleImportant2}>\r\n               <i className=\"fa fa-exclamation\" />\r\n            </button>\r\n\r\n            <button type=\"button\"\r\n               className=\"btn btn-outline-danger btn-sm float-right\"\r\n               onClick={onDeleted2}>\r\n               <i className=\"fa fa-trash-o\" />\r\n            </button>\r\n         </span>\r\n      )\r\n   }\r\n}\r\n\r\n// export default TodoListItem;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item'\r\n\r\nimport './todo-list.css'\r\n\r\nconst TodoList = ({ todos, onDeleted1, onToggleImportant1, onToggleDone1 }) => {\r\n\r\n   const elements = todos.map((item) => {\r\n\r\n      const { id, ...itemProps } = item;\r\n\r\n      const deleteItem2 = () => {\r\n         onDeleted1(id)\r\n      }\r\n\r\n      return (\r\n         <li key={id} className=\"list-group-item\">\r\n            {/* <TodoListItem\r\n               label={item.label}\r\n               important={item.important} /> */}\r\n            <TodoListItem {...itemProps}\r\n               // onDeleted2={() => onDeleted1(id)} \r\n               onDeleted2={deleteItem2}\r\n               onToggleImportant2={() => onToggleImportant1(id)}\r\n               onToggleDone2={() => onToggleDone1(id)}\r\n            />\r\n         </li>)\r\n   })\r\n\r\n   return (\r\n      <ul className=\"list-group todo-list\">\r\n         {elements}\r\n      </ul>\r\n   );\r\n};\r\n\r\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","// import React from 'react';\r\nimport React, { Component, component } from 'react';\r\n\r\nimport './item-status-filter.css'\r\n\r\n// const ItemStatusFilter = () => {\r\n//    return (\r\n//       <div className=\"btn-group\">\r\n//          <button type=\"button\"\r\n//             className=\"btn btn-info\">All</button>\r\n//          <button type=\"button\"\r\n//             className=\"btn btn-outline-secondary\">Active</button>\r\n//          <button type=\"button\"\r\n//             className=\"btn btn-outline-secondary\">Done</button>\r\n//       </div>\r\n\r\n//    )\r\n// }\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n   buttons = [\r\n      { name: 'all', label: 'All' },\r\n      { name: 'active', label: 'Active' },\r\n      { name: 'done', label: 'Done' }\r\n   ]\r\n\r\n\r\n\r\n\r\n   render() {\r\n\r\n      const { filter, onFilterChange } = this.props;\r\n\r\n\r\n      const tagButtons = this.buttons.map(({ name, label }) => {\r\n\r\n         let classNames = (name === filter) ? 'btn btn-info' : 'btn btn-outline-secondary';\r\n\r\n         return (\r\n            <button key={name}\r\n               type=\"button\"\r\n               className={classNames}\r\n               onClick={() => onFilterChange(name)} >\r\n               {label}\r\n            </button>\r\n         )\r\n\r\n      })\r\n\r\n      return (\r\n         <div className=\"btn-group\" >\r\n            {tagButtons}\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\n// export default ItemStatusFilter;","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\n\r\nimport './item-add-form.css'\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n   state = {\r\n      label: ''\r\n   }\r\n\r\n   onLabelChange = (e) => {\r\n      this.setState({\r\n         label: e.target.value\r\n      });\r\n   }\r\n\r\n   onSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.onItemAdded(this.state.label);\r\n      this.setState({\r\n         label: ''\r\n      });\r\n   }\r\n\r\n   render() {\r\n\r\n      return (\r\n\r\n         <form className=\"item-add-form d-flex\"\r\n            onSubmit={this.onSubmit}>\r\n\r\n            <input type=\"text\"\r\n               className=\"form-control\"\r\n               onChange={this.onLabelChange}\r\n               placeholder=\"What needs to be done\"\r\n               value={this.state.label} />\r\n            <button\r\n               className=\"btn btn-outline-secondary\">\r\n               Add_Item\r\n               </button>\r\n         </form >\r\n      )\r\n   }\r\n\r\n\r\n\r\n}\r\n\r\n","import App from './app'\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter'\r\nimport ItemAddForm from '../item-add-form'\r\n\r\nimport './app.css'\r\n\r\nexport default class App extends Component {\r\n\r\n   maxId = 0;\r\n\r\n   state = {\r\n      todoData: [\r\n         this.createTodoItem('Drink Coffee'),\r\n         this.createTodoItem('Make Awesome App'),\r\n         this.createTodoItem('Have a lunch')\r\n      ],\r\n      term: '',\r\n      filter: 'all'\r\n   }\r\n\r\n   createTodoItem(label) {\r\n      return {\r\n         label,\r\n         important: false,\r\n         done: false,\r\n         id: this.maxId++\r\n      }\r\n   }\r\n\r\n   deleteItem1 = (idArg) => {\r\n      this.setState(({ todoData }) => {\r\n         const newArray = todoData.filter((el) => el.id !== idArg)\r\n\r\n         return {\r\n            todoData: newArray\r\n         }\r\n      })\r\n   }\r\n\r\n   addItem = (text) => {\r\n      const newItem = this.createTodoItem(text);\r\n\r\n      this.setState(({ todoData }) => {\r\n\r\n         const newArray = [...todoData, newItem];\r\n\r\n         return {\r\n            todoData: newArray\r\n         }\r\n      })\r\n   }\r\n\r\n   toggleProperty(arr, id, propName) {\r\n      return arr.map((item) => {\r\n         if (item.id === id) { return { ...item, [propName]: !item.[propName] } }\r\n         else { return item };\r\n      })\r\n   }\r\n\r\n   toggleImportant1 = (id) => {\r\n      this.setState(({ todoData }) => {\r\n         return {\r\n            todoData: this.toggleProperty(todoData, id, 'important')\r\n         }\r\n      })\r\n   }\r\n\r\n   toggleDone1 = (id) => {\r\n      this.setState(({ todoData }) => {\r\n         return {\r\n            todoData: this.toggleProperty(todoData, id, 'done')\r\n         }\r\n      })\r\n   }\r\n\r\n   search(tData, trm) {\r\n      return tData.filter((el) => el.label.toLowerCase().includes(trm.toLowerCase()))\r\n   };\r\n\r\n   filter(items, filter) {\r\n      switch (filter) {\r\n         case 'all':\r\n            return items;\r\n         case 'active':\r\n            return items.filter((item) => !item.done);\r\n         case 'done':\r\n            return items.filter((item) => item.done);\r\n         default:\r\n            return items;\r\n      }\r\n   }\r\n\r\n   onSearchChange = (trm) => {\r\n      this.setState({\r\n         term: trm\r\n      });\r\n   }\r\n\r\n   onFilterChange = (flt) => {\r\n      this.setState({\r\n         filter: flt\r\n      });\r\n   }\r\n\r\n\r\n\r\n\r\n   render() {\r\n      const { todoData, term, filter } = this.state;\r\n\r\n      const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n      const doneCount = todoData.filter((el) => el.done).length;\r\n\r\n      const todoCount = todoData.length - doneCount;\r\n\r\n\r\n\r\n      return (\r\n         <div className=\"todo-app\">\r\n            <AppHeader toDo={todoCount} done={doneCount} />\r\n            <div className=\"top-panel d-flex\">\r\n               <SearchPanel onSearchChange={this.onSearchChange} />\r\n               <ItemStatusFilter filter={filter} onFilterChange={this.onFilterChange} />\r\n            </div>\r\n\r\n            <TodoList\r\n               todos={visibleItems}\r\n               onDeleted1={this.deleteItem1}\r\n               onToggleImportant1={this.toggleImportant1}\r\n               onToggleDone1={this.toggleDone1} />\r\n            <ItemAddForm\r\n               onItemAdded={this.addItem} />\r\n         </div>\r\n      )\r\n   }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}